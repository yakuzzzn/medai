version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: medai
      POSTGRES_USER: medai_user
      POSTGRES_PASSWORD: medai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medai_user -d medai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Gateway
  gateway:
    build:
      context: ./backend
      dockerfile: Dockerfile.gateway
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://medai_user:medai_password@postgres:5432/medai
      REDIS_URL: redis://redis:6379
      PYTHON_SERVICE_URL: http://scribe-core:8000
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Python Scribe Core
  scribe-core:
    build:
      context: ./backend
      dockerfile: Dockerfile.python
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://medai_user:medai_password@postgres:5432/medai
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      WHISPER_MODEL: whisper-1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/venv

  # Web Console
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_WS_URL: ws://localhost:3000
    depends_on:
      - gateway

volumes:
  postgres_data:
  redis_data: 